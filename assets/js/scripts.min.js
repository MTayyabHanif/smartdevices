
;(function(win, undef) {
	!(console && console.log) && (window.console = {
		log: function() {}
	});

	function Loader(options) {
		options = options || {};
		this.init(options);
	}

	Loader.prototype.loadedItems = {};
	Loader.prototype.globalCache = {};

	Loader.prototype.init = function(options) {
		this.textInjection = options.textInjection;
		this.build = this.get('build_id_t');

		if (!this.textInjection || !this.build || this.build < this.expiredTimestamp) {
			this.build = +new Date();
			this.set('build_id_t', this.build);
		}

		this.head = document.head || document.getElementsByTagName('head')[0];
		this.defaultExpiration = 1; //hours
		this.expiredTimestamp = +new Date() - this.defaultExpiration * 60 * 60 * 1000;
	};

	Loader.prototype.promise = (function() {
		var a = this;

		function b() {
			this._callbacks = [];
		}
		b.prototype.then = function(a, c) {
			var d;
			if (this._isdone) d = a.apply(c, this.result);
			else {
				d = new b();
				this._callbacks.push(function() {
					var b = a.apply(c, arguments);
					if (b && typeof b.then === 'function') b.then(d.done, d);
				});
			}
			return d;
		};
		b.prototype.done = function() {
			this.result = arguments;
			this._isdone = true;
			for (var a = 0; a < this._callbacks.length; a++) this._callbacks[a].apply(null, arguments);
				this._callbacks = [];
		};

		function c(a) {
			var c = new b();
			var d = [];
			if (!a || !a.length) {
				c.done(d);
				return c;
			}
			var e = 0;
			var f = a.length;

			function g(a) {
				return function() {
					e += 1;
					d[a] = Array.prototype.slice.call(arguments);
					if (e === f) c.done(d);
				};
			}
			for (var h = 0; h < f; h++) a[h].then(g(h));
				return c;
		}

		function d(a, c) {
			var e = new b();
			if (a.length === 0) e.done.apply(e, c);
			else a[0].apply(null, c).then(function() {
				a.splice(0, 1);
				d(a, arguments).then(function() {
					e.done.apply(e, arguments);
				});
			});
				return e;
			}

			function e(a) {
				var b = "";
				if (typeof a === "string") b = a;
				else {
					var c = encodeURIComponent;
					for (var d in a)
						if (a.hasOwnProperty(d)) b += '&' + c(d) + '=' + c(a[d]);
				}
				return b;
			}

			function f() {
				var a;
				if (window.XMLHttpRequest) a = new XMLHttpRequest();
				else if (window.ActiveXObject) try {
					a = new ActiveXObject("Msxml2.XMLHTTP");
				} catch (b) {
					a = new ActiveXObject("Microsoft.XMLHTTP");
				}
				return a;
			}

			function g(a, c, d, g, bust_http_cache) {
				var h = new b();
				var j, k;
				d = d || {};
				g = g || {};
				try {
					j = f();
				} catch (l) {
					h.done(i.ENOXHR, "");
					return h;
				}
				k = e(d);
				if (a === 'GET' && k) {
					c += '?' + k;
					k = null;
				}
				if (bust_http_cache) {
					var amp = c.indexOf('?') !== -1 ? '&' : '?';
					c += amp + '_t=' + (+new Date);
				}
				j.open(a, c);
				j.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
				for (var m in g)
					if (g.hasOwnProperty(m)) j.setRequestHeader(m, g[m]);

				function n() {
					j.abort();
					h.done(i.ETIMEOUT, "", j);
				}
				var o = i.ajaxTimeout;
				if (o) var p = setTimeout(n, o);
				j.onreadystatechange = function() {
					if (o) clearTimeout(p);
					if (j.readyState === 4) {
						var a = (!j.status || (j.status < 200 || j.status >= 300) && j.status !== 304);
						h.done(a, j.responseText, j);
					}
				};
				j.send(k);
				return h;
			}

			function h(a) {
				return function(b, c, d, bust_http_cache) {
					return g(a, b, c, d, bust_http_cache);
				};
			}
			var i = {
				Promise: b,
				join: c,
				chain: d,
				ajax: g,
				get: h('GET'),
				post: h('POST'),
				put: h('PUT'),
				del: h('DELETE'),
				ENOXHR: 1,
				ETIMEOUT: 2,
				ajaxTimeout: 0
			};
			return i;
		})();

		Loader.prototype.set = function(key, data) {
			if (window.localStorage) {
				try {
					localStorage.setItem(key, JSON.stringify(data));
					console.log("Key: "+ key);
					return true;
				} catch (e) {
					if (e.name === "QUOTA_EXCEEDED_ERR") {
						console.log("Oh no! We ran out of room!");
					} else {
						console.log(e);
					}
					return false;
				}
			} else {
				console.log("Nah, can't window.localStorage :/");
				this.globalCache[key] = data;
			}
		};

		Loader.prototype.get = function(key) {
			if (window.localStorage) {
				var data = JSON.parse(localStorage.getItem(key) || 'false');
				return data;
			} else {
				return this.globalCache[key];
			}
		};

		Loader.prototype.has = function(key) {
			if (window.localStorage) {
				return (key in localStorage);
			} else {
				return (key in globalCache);
			}
		};

		Loader.prototype.clear = function(key) {
			if (window.localStorage) {
				this.remove(key);
			} else {
				this.globalCache[key] = null;
			}
		};

		Loader.prototype.clearAll = function() {
			if (window.localStorage) {
				for (key in localStorage) {
					this.clear(key);
				}
			} else {
				for (key in this.globalCache) {
					this.globalCache[key] = null;
				}
			}
		};

		Loader.prototype.remove = function(key) {
			if (window.localStorage) {
				localStorage.removeItem(key);
			} else {
				this.globalCache[key] = null;
			}
			return this;
		};

		Loader.prototype.addExpiration = function(obj) {
			var now = +new Date();
			obj.stamp = now;
		};

		Loader.prototype.isJS = function(url) {
			var isJS = url.indexOf('.js') != -1;
			return isJS;
		};

		Loader.prototype.isCSS = function(url) {
			var isCSS = url.indexOf('.css') != -1;
			return isCSS;
		};

		Loader.prototype.injectScriptTagByText = function(text, promise) {
			eval.call(window, text);
			setTimeout(function() {
				promise && promise.done();
			}, 0);
		};

		Loader.prototype.injectStyleTagByText = function(text, promise) {
			var style = document.createElement('style');
			style.textContent = text;
			this.head.appendChild(style);
			setTimeout(function() {
				promise && promise.done();
			}, 0);
		};

		Loader.prototype.injectScriptTagBySrc = function(url, promise) {
			var script = document.createElement('script');
			script.src = url;
			var cb = function() {
				setTimeout(function() {
					promise && promise.done();
				}, 0);
			};
			if (script.addEventListener) {
				script.addEventListener("load", cb, false);
			} else if (script.readyState) {
				script.onreadystatechange = cb;
			}
			this.head.appendChild(script);
		};

		Loader.prototype.injectStyleTagBySrc = function(url, promise) {
			var style = document.createElement('link');
			style.href = url;
			style.rel = "stylesheet";
			this.head.appendChild(style);
			setTimeout(function() {
				promise && promise.done();
			}, 0);
		};

		Loader.prototype.replaceRelativeURLWithFullURL = function(segments, url_fragment, text) {
			if (segments.length > 1) {
				return text.replace(segments[0], 'url(' + url_fragment + '/..' + segments[1] + ')');
			}
			return text;
		};

		Loader.prototype.replaceURLs = function(url, text) {
			var regex = /url\(\s*['"]*\s*\.\.([^)]+)\s*['"]*\s*\)/g,
			regex2 = /url\(\s*['"]*\s*\.\.([^)]+)\s*['"]*\s*\)/,
			urls = text.match(regex),
			_url = url.split('/');

			_url.pop();
			_url = _url.join('/');

			for (var i in urls) {
				text = this.replaceRelativeURLWithFullURL(urls[i].match(regex2), _url, text);
			}

			return text;
		};

		function convertToArray(iterable) {
			if (!iterable) return [];
			var length = iterable.length || 0,
			results = new Array(length);
			while (length--) results[length] = iterable[length];
			return results;
		}

		function forEach(array, cb) {
			for (var i = 0, len = array.length; i < len; i++) {
				cb(array[i], i);
			}
		}

		Loader.prototype.load = function( /* files to load */ ) {
			var args = [].slice.call(arguments),
			len = args.length,
			promises = [],
			self = this;

			forEach(convertToArray(args), function(file) {
				if (!self.loadedItems[file.url]) {
					self.loadedItems[file.url] = 1;
					var p = self.loadFile(file);
					if (!self.textInjection) {
						self.clear(file.url);
					}
					promises.push(function() {
						var _p = new self.promise.Promise();
						self.injectFile(file, _p);
						return _p;
					});
				}
			});

			return this.promise.chain(promises);
		};

		Loader.prototype.loadFile = function(file) {
			var url = file.url,
			promise = new this.promise.Promise(),
			self = this;

			if (this.textInjection && !this.has(url) && !this.isDifferentDomain(url)) {
				var charAt0 = url.charAt(0);
				if (charAt0 !== '/' && charAt0 !== '.') {
					url = '//' + url;
				}
				this.promise.get(url).then(function(error, result) {
					if (!error) {
						file.text = self.replaceURLs(url, result);
						self.set(url, file);
						console.log("File injected !");
					}
					promise.done();
				});
			} else {
				promise.done();
			}
			return promise;
		};

		Loader.prototype.injectFile = function(file, promise) {
			var url = file.url,
			isCSS = this.isCSS(url),
			isJS = this.isJS(url);

			if (!this.textInjection || !this.has(url)) {
				var charAt0 = url.charAt(0);
				if (charAt0 !== '/' && charAt0 !== '.') {
					url = '//' + url;
				}
				if (isCSS) {
					this.injectStyleTagBySrc(url, promise);
				} else if (isJS) {
					this.injectScriptTagBySrc(url, promise);
				} else {
					promise.done();
				}
			} else {
				if (isCSS) {
					this.injectStyleTagByText(this.get(url).text, promise);
				} else if (isJS) {
					this.injectScriptTagByText(this.get(url).text, promise);
				} else {
					promise.done();
				// promise.done(null, this.get(url).text);
			}
		}
	};

	Loader.prototype.isDifferentDomain = function(url) {
		var hasProtocol = url.indexOf('//'),
		protocol = null;
		if (hasProtocol !== -1) {
			prototype = url.substr(0, hasProtocol + 2);
			url = url.substr(hasProtocol + 2);
		}

		var isLocal;

		var hasRelativeDotSlash = url.indexOf('./');
		if (hasRelativeDotSlash === 0) {
			hasRelativeDotSlash = true;
			isLocal = true;
			url = url.substr(2);
		} else {
			hasRelativeDotSlash = false;
		}

		var hasRelativeSingleSlash = url.indexOf('/');
		if (hasRelativeSingleSlash === 0) {
			isLocal = true;
			hasRelativeSingleSlash = true;
			url = url.substr(1);
		} else {
			hasRelativeSingleSlash = false;
		}

		if (!hasRelativeSingleSlash && !hasRelativeDotSlash) {
			var hasAnotherSlash = url.indexOf('/'),
			hostname,
			pathname;
			if (hasAnotherSlash !== -1) {
				hostname = url.substr(0, hasAnotherSlash);
				pathname = url.substr(hasAnotherSlash);
			} else if (url.indexOf('js') !== -1 || url.indexOf('css') !== -1 || url.indexOf('tmpl') !== -1) {
				isLocal = true;
				pathname = url;
			} else {
				hostname = url;
			}

			if (hostname.indexOf(win.location.host) !== -1) {
				isLocal = true;
			}
		}

		return !isLocal;
	};

	win.Loader = Loader;

	var tag = document.getElementById("loaderjs");
	var app = tag && (tag.getAttribute("data-app") || tag['data-app']);
	var textInjection = tag && (tag.getAttribute("textInjection") || tag['textInjection']);
	var loader = win.loader = new Loader({
		textInjection: textInjection
	});
	if (app) {
		loader.load({
			url: app
		});
	}
})(window, undefined);
/* Font Face Observer v2.0.13 - © Bram Stein. License: BSD-3-Clause */(function(){'use strict';var f,g=[];function l(a){g.push(a);1==g.length&&f()}function m(){for(;g.length;)g[0](),g.shift()}f=function(){setTimeout(m)};function n(a){this.a=p;this.b=void 0;this.f=[];var b=this;try{a(function(a){q(b,a)},function(a){r(b,a)})}catch(c){r(b,c)}}var p=2;function t(a){return new n(function(b,c){c(a)})}function u(a){return new n(function(b){b(a)})}function q(a,b){if(a.a==p){if(b==a)throw new TypeError;var c=!1;try{var d=b&&b.then;if(null!=b&&"object"==typeof b&&"function"==typeof d){d.call(b,function(b){c||q(a,b);c=!0},function(b){c||r(a,b);c=!0});return}}catch(e){c||r(a,e);return}a.a=0;a.b=b;v(a)}}
                                                                       function r(a,b){if(a.a==p){if(b==a)throw new TypeError;a.a=1;a.b=b;v(a)}}function v(a){l(function(){if(a.a!=p)for(;a.f.length;){var b=a.f.shift(),c=b[0],d=b[1],e=b[2],b=b[3];try{0==a.a?"function"==typeof c?e(c.call(void 0,a.b)):e(a.b):1==a.a&&("function"==typeof d?e(d.call(void 0,a.b)):b(a.b))}catch(h){b(h)}}})}n.prototype.g=function(a){return this.c(void 0,a)};n.prototype.c=function(a,b){var c=this;return new n(function(d,e){c.f.push([a,b,d,e]);v(c)})};
                                                                       function w(a){return new n(function(b,c){function d(c){return function(d){h[c]=d;e+=1;e==a.length&&b(h)}}var e=0,h=[];0==a.length&&b(h);for(var k=0;k<a.length;k+=1)u(a[k]).c(d(k),c)})}function x(a){return new n(function(b,c){for(var d=0;d<a.length;d+=1)u(a[d]).c(b,c)})};window.Promise||(window.Promise=n,window.Promise.resolve=u,window.Promise.reject=t,window.Promise.race=x,window.Promise.all=w,window.Promise.prototype.then=n.prototype.c,window.Promise.prototype["catch"]=n.prototype.g);}());

(function(){function l(a,b){document.addEventListener?a.addEventListener("scroll",b,!1):a.attachEvent("scroll",b)}function m(a){document.body?a():document.addEventListener?document.addEventListener("DOMContentLoaded",function c(){document.removeEventListener("DOMContentLoaded",c);a()}):document.attachEvent("onreadystatechange",function k(){if("interactive"==document.readyState||"complete"==document.readyState)document.detachEvent("onreadystatechange",k),a()})};function r(a){this.a=document.createElement("div");this.a.setAttribute("aria-hidden","true");this.a.appendChild(document.createTextNode(a));this.b=document.createElement("span");this.c=document.createElement("span");this.h=document.createElement("span");this.f=document.createElement("span");this.g=-1;this.b.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.c.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";
 this.f.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.h.style.cssText="display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}
 function t(a,b){a.a.style.cssText="max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:"+b+";"}function y(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+"px";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function z(a,b){function c(){var a=k;y(a)&&a.a.parentNode&&b(a.g)}var k=a;l(a.b,c);l(a.c,c);y(a)};function A(a,b){var c=b||{};this.family=a;this.style=c.style||"normal";this.weight=c.weight||"normal";this.stretch=c.stretch||"normal"}var B=null,C=null,E=null,F=null;function G(){if(null===C)if(J()&&/Apple/.test(window.navigator.vendor)){var a=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent);C=!!a&&603>parseInt(a[1],10)}else C=!1;return C}function J(){null===F&&(F=!!document.fonts);return F}
 function K(){if(null===E){var a=document.createElement("div");try{a.style.font="condensed 100px sans-serif"}catch(b){}E=""!==a.style.font}return E}function L(a,b){return[a.style,a.weight,K()?a.stretch:"","100px",b].join(" ")}
 A.prototype.load=function(a,b){var c=this,k=a||"BESbswy",q=0,D=b||3E3,H=(new Date).getTime();return new Promise(function(a,b){if(J()&&!G()){var M=new Promise(function(a,b){function e(){(new Date).getTime()-H>=D?b():document.fonts.load(L(c,'"'+c.family+'"'),k).then(function(c){1<=c.length?a():setTimeout(e,25)},function(){b()})}e()}),N=new Promise(function(a,c){q=setTimeout(c,D)});Promise.race([N,M]).then(function(){clearTimeout(q);a(c)},function(){b(c)})}else m(function(){function u(){var b;if(b=-1!=
 	f&&-1!=g||-1!=f&&-1!=h||-1!=g&&-1!=h)(b=f!=g&&f!=h&&g!=h)||(null===B&&(b=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent),B=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=B&&(f==v&&g==v&&h==v||f==w&&g==w&&h==w||f==x&&g==x&&h==x)),b=!b;b&&(d.parentNode&&d.parentNode.removeChild(d),clearTimeout(q),a(c))}function I(){if((new Date).getTime()-H>=D)d.parentNode&&d.parentNode.removeChild(d),b(c);else{var a=document.hidden;if(!0===a||void 0===a)f=e.a.offsetWidth,
 		g=n.a.offsetWidth,h=p.a.offsetWidth,u();q=setTimeout(I,50)}}var e=new r(k),n=new r(k),p=new r(k),f=-1,g=-1,h=-1,v=-1,w=-1,x=-1,d=document.createElement("div");d.dir="ltr";t(e,L(c,"sans-serif"));t(n,L(c,"serif"));t(p,L(c,"monospace"));d.appendChild(e.a);d.appendChild(n.a);d.appendChild(p.a);document.body.appendChild(d);v=e.a.offsetWidth;w=n.a.offsetWidth;x=p.a.offsetWidth;I();z(e,function(a){f=a;u()});t(e,L(c,'"'+c.family+'",sans-serif'));z(n,function(a){g=a;u()});t(n,L(c,'"'+c.family+'",serif'));
 		z(p,function(a){h=a;u()});t(p,L(c,'"'+c.family+'",monospace'))})})};"object"===typeof module?module.exports=A:(window.FontFaceObserver=A,window.FontFaceObserver.prototype.load=A.prototype.load);}());

/**
 * Pilpil v1.0.0 - Progressive Image Loading
 * @link https://zafree.github.io/pilpil
 * @copyright 2015-2016 Zafree
 * @license MIT
 */
(function ($) {
	'use strict';


	
	$.fn.hasAttr = function (name) {
		return this.attr(name) !== undefined;
	};

	$.fn.inView = function () {
		// Am I visible?
		// Height and Width are not explicitly necessary in visibility detection, the bottom, right, top and left are the
		// essential checks. If an image is 0x0, it is technically not visible, so it should not be marked as such.
		// That is why either width or height have to be > 0.
		var rect = this[0].getBoundingClientRect();
		return (
			(rect.height > 0 || rect.width > 0) &&
			rect.bottom >= 0 &&
			rect.right >= 0 &&
			rect.top <= (window.innerHeight || document.documentElement.clientHeight) &&
			rect.left <= (window.innerWidth || document.documentElement.clientWidth)
		);
	};

	 // set progressive image loading
	 var progressiveMedias = document.querySelectorAll('.progressiveMedia');
	 for (var i = 0; i < progressiveMedias.length; i++) {
	 	loadImage(progressiveMedias[i]);
	 }

	 function loadImage(progressiveMedia) {
		  // calculate aspect ratio
		  // for the aspectRatioPlaceholder-fill
		  // that helps to set a fixed fill for loading images
		  var width = progressiveMedia.dataset.width,
		  height = progressiveMedia.dataset.height,
		  fill = height / width * 100,
		  placeholderFill = progressiveMedia.previousElementSibling;

		  placeholderFill.setAttribute('style', 'padding-bottom:'+fill+'%;');



		  // get thumbnail height wight
		  // make canvas fun part
		  var thumbnail = progressiveMedia.querySelector('.progressiveMedia-thumbnail'),
		  smImageWidth = thumbnail.width,
		  smImageheight = thumbnail.height,

		  canvas = progressiveMedia.querySelector('.progressiveMedia-canvas'),
		  context = canvas.getContext('2d');

		  canvas.height = smImageheight;
		  canvas.width = smImageWidth;

		  var img = new Image();
		  img.src = thumbnail.src;

		  img.onload = function () {
			// context.drawImage(img, 0, 0);
			// draw canvas
			var canvasImage = new CanvasImage(canvas, img);
			canvasImage.blur(2);

			// load canvas visible
			progressiveMedia.classList.add('is-canvasLoaded');
		};
	}


	$(window).on('scroll load resize',function(){
		$(".progressiveMedia-image").each(function(){
			var $self = $(this),
			$selfOffset = $self.offset(),
			$notLoadedYet = $self.attr("src");
			
			if ($notLoadedYet == undefined) {
				var img = new Image();
				img.src = $self.attr("data-src");

				img.onload = function () {
					if($self.inView()) {
						$self.attr('src',$self.attr('data-src'));
						$self.parent().addClass('is-imageLoaded');
					}
				}
			}
		});
	});

})(jQuery);


// canvas blur function
CanvasImage = function (e, t) {
	this.image = t;
	this.element = e;
	e.width = t.width;
	e.height = t.height;
	this.context = e.getContext('2d');
	this.context.drawImage(t, 0, 0);
};

CanvasImage.prototype = {
	blur:function(e) {
		this.context.globalAlpha = 0.5;
		for(var t = -e; t <= e; t += 2) {
			for(var n = -e; n <= e; n += 2) {
				this.context.drawImage(this.element, n, t);
				var blob = n >= 0 && t >= 0 && this.context.drawImage(this.element, -(n -1), -(t-1));
			}
		}
	}
};
/**
 * File skip-link-focus-fix.js.
 *
 * Helps with accessibility for keyboard only users.
 *
 * Learn more: https://git.io/vWdr2
 */
( function() {
	var isIe = /(trident|msie)/i.test( navigator.userAgent );

	if ( isIe && document.getElementById && window.addEventListener ) {
		window.addEventListener( 'hashchange', function() {
			var id = location.hash.substring( 1 ),
				element;

			if ( ! ( /^[A-z0-9_-]+$/.test( id ) ) ) {
				return;
			}

			element = document.getElementById( id );

			if ( element ) {
				if ( ! ( /^(?:a|select|input|button|textarea)$/i.test( element.tagName ) ) ) {
					element.tabIndex = -1;
				}

				element.focus();
			}
		}, false );
	}
} )();



jQuery(document).ready(function ($) {
	
	// fade out when clicks on external link - smooth animation :)
	$('a.external').click(function(e) {
		e.preventDefault();
		var link = $(this).attr('href');
		$('body').fadeOut('50', function() {
			window.location.href = link;
		});
	});
	
	
	/**
	*
	* Header SCRIPTING
	*
	*/
	$('ul.menu li.menu-item-has-children>a').append('<span class="ti-angle-down"></span>');
	
	//sticky header
	$(window).on('scroll load', function () {
		if ($(document).scrollTop() == $('.header-wrapper')[0].getBoundingClientRect().top){
			$('.header-wrapper').removeClass('sticky-header');
		}else{
			$('.header-wrapper').addClass('sticky-header');
		}
	});
	
	
	
	
	
	/**
	*
	* Fonts Loading using FONTFACEOBSERVER
	*
	*/
	var baseFont = new FontFaceObserver('ProximaNova', {
		weight: 200
	});
	var baseFont2 = new FontFaceObserver('ProximaNova', {
		weight: 300,
		style: "italic"
	});
	var baseFont3 = new FontFaceObserver('ProximaNova', {
		weight: 400
	});
	var baseFont4 = new FontFaceObserver('ProximaNova', {
		weight: 500
	});
	var baseFont5 = new FontFaceObserver('ProximaNova', {
		weight: 600
	});
	Promise.all([baseFont.load(), baseFont2.load(), baseFont3.load(), baseFont4.load(), baseFont5.load()]).then(function () {
		document.documentElement.className += " fonts-loaded";
	});
	
	
});



















// // LOCAL STORAGE SCRIPT
// // load css files
// console.log('Local storage started!');
// var styles = [{
// 	url: '/css/styles.css'
// }];

// // load js files
// var js = [{
// 	url: '/js/scripts/jquery.js'
// }];
// // IF loading JS files then in LOADER.LOAD.APPLY use styles.concat(js) not just styles

// // UNCOMMENT to turn on loading cached files from Local Storage (performance boost √)
// loader.textInjection = true;

// if (loader.has('/css/styles.css')) {
// 	loader.load.apply(loader, styles.concat(js)).then(function() {
// 		// initiliaze your app?
// 		console.log("It has! loaded from storage!");
// 	});
// }else{
// 	loader.load.apply(loader, styles.concat(js)).then(function() {
// 		// initiliaze your app?
// 		console.log("Nope, loading from file :/");
// 	});
// }
